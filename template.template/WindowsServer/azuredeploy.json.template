{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineName": {
            "type": "string"
        },
        "virtualNetwork": {
            "type": "string",
            "allowedValues": [REPLACE_VNETNAME_LIST],
            "defaultValue": REPLACE_DEFAULT_VNETNAME
        },
        "subnetName": {
            "type": "string",
			"defaultValue": "sub-private-vm1"
        },
        "addPublicIP": {
            "type": "string",
            "allowedValues": ["No","Yes"],
            "metadata": {
                "description": "Adding a public IP when it's allowed in the vNet."
            },			
            "defaultValue": "No"
        },
        "DNS": {
            "type": "string",
            "metadata": {
                "description": "Leave it blank to use default DNS server on the vNet, or put your own DNS IP(s), multiple DNS can be seperated with space"
            },			
			"defaultValue": ""
        },
        "priority": {
            "type": "string",
			"allowedValues": ["Spot","Regular"],
			"defaultValue": "Spot"
        },
        "OS": {
            "type": "string",
			"allowedValues": ["Windows10Pro","Windows10Ent"]
        },
        "patchMode": {
            "type": "string",
			"allowedValues": ["AutomaticByOS","Manual"],
			"defaultValue": "AutomaticByOS"
        },
        "osDiskType": {
            "type": "string",
			"allowedValues": ["Standard_LRS","StandardSSD_LRS","Premium_LRS"],
			"defaultValue": "Standard_LRS"
        },
        "virtualMachineSize": {
            "type": "string",
			REPLACE_VM_SIZES
        },
        "adminUsername": {
            "type": "string",
			"defaultValue": "sysadm"
        },
        "adminPassword": {
            "type": "secureString"
        },
	    "_artifactsLocation": {
	      "type": "string",
	      "metadata": {
	        "description": "Path to the nested templates used in this deployment"
	      },
          "defaultValue": "https://sadevtesthub.blob.core.windows.net/private/AD-3VM-Env"
	    },
	    "_artifactsLocationSasToken": {
	      "type": "secureString",
	      "metadata": {
	        "description": "SAS token to access artifacts location, if required"
	      }
	    }
    },
    "variables": {
		"location": "REPLACE_VNET_LOCATION",
        REPLACE_VNET_DEFINITION_BLOCK
        "vnetId": "[variables(parameters('virtualNetwork'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
		"networkInterfaceName": "[concat( parameters('virtualMachineName'), '-', take(guid(resourceGroup().id,deployment().name),8))]",
		"publicIPName": "[concat( variables('networkInterfaceName'), '-pip')]",
		"Windows10Pro": {
            "publisher": "MicrosoftWindowsDesktop",
            "offer": "Windows-10",
            "sku": "20h1-pro",
            "version": "latest"
	    },
		"Windows10Ent": {
            "publisher": "MicrosoftWindowsDesktop",
            "offer": "Windows-10",
            "sku": "20h2-ent",
            "version": "latest"
	    },
        "PostDeployScriptURL": "[concat(parameters('_artifactsLocation'),'/PostDeploy.ps1',parameters('_artifactsLocationSasToken'))]",
		"PostDeployScript": "[concat('.',substring(parameters('_artifactsLocation'),add(indexOf(parameters('_artifactsLocation'),'/artifacts/'),10)),'/PostDeploy.ps1')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPName')]",
            "apiVersion": "2020-05-01",
            "location": "[variables('location')]",
            "condition": "[and(equals(parameters('addPublicIP'),'Yes'),not(contains(parameters('virtualNetwork'),'vn250-')) ) ]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[variables('publicIPName')]"
			],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress":  "[if( and(equals(parameters('addPublicIP'),'Yes'),not(contains(parameters('virtualNetwork'),'vn250-'))),json( concat('{\"id\":\"',resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName')) ,'\"}') ),json('null') )]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": "[variables( parameters('OS')  )]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]"
                        }
					}
                },
                "licenseType": "Windows_Client",
                "priority": "[parameters('priority')]",
                "evictionPolicy": "[if(equals(parameters('priority'),'Regular'), json('null'),'Deallocate')]",
                "billingProfile": "[if(equals(parameters('priority'),'Regular'), json('null'),json('{\"maxPrice\": -1}') )]",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
          "name": "[concat(parameters('virtualMachineName'),'/PostDeploy')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "apiVersion": "2018-06-01",
          "location": "[variables('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.10",
            "autoUpgradeMinorVersion": true,
            "settings": {
             "fileUris": [
                "[variables('PostDeployScriptURL')]"
              ],
              "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File ',variables('PostDeployScript'), ' -DNS \"', parameters('DNS'),'\"'  )]"
            }
          }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}

